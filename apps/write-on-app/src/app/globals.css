@import "tailwindcss";

:root {
  --background: #ffffff;
  --foreground: #171717;
  /* Z-index discipline tokens */
  --z-control-strip: 1000;
  --z-workspace: 0;
  
  /* Page size and padding constants */
  --page-width: 1200px;
  --page-height: 2200px;
  --page-padding-x: 40px;
  --page-padding-top: 40px;
  --page-padding-bottom: 40px;
  
  /* Virtual size calculation: page + padding */
  --virtual-width: calc(var(--page-width) + 2 * var(--page-padding-x));
  --virtual-height: calc(var(--page-height) + var(--page-padding-top) + var(--page-padding-bottom));
}

@theme inline {
  --color-background: var(--background);
  --color-foreground: var(--foreground);
  --font-sans: var(--font-geist-sans);
  --font-mono: var(--font-geist-mono);
}

@media (prefers-color-scheme: dark) {
  :root {
    --background: #0a0a0a;
    --foreground: #ededed;
  }
}

/* Reset default margins and ensure full-height root for layout stability */
html, body {
  margin: 0;
  padding: 0;
  height: 100%;
}

body {
  background: var(--background);
  color: var(--foreground);
  font-family: Arial, Helvetica, sans-serif;
}

/* Next.js root height safety */
#__next, body > div:first-child {
  min-height: 100%;
}

/* Prevent scroll chaining during zoom handling */
.main-scroll {
  overscroll-behavior: none;
}

/* Input guardrails */
.workspace-root, .workspace-canvas-mount, canvas {
  user-select: none;
  -webkit-user-select: none;
  -moz-user-select: none;
  touch-action: none;
}

/* Phase-2: pin control strip and offset content */
.control-strip {
  /* Guardrail: freeze positioning to prevent regressions */
  position: fixed !important;  /* never overridden */
  top: 0 !important;
  left: 0 !important;
  right: 0 !important;
  z-index: var(--z-control-strip, 1000) !important;
  width: 100%;
  display: flex;
  flex-direction: column;
  /* Provide a solid surface behind chrome to prevent content bleed-through */
  background-color: var(--chrome-bg, #ffffff);
  /* Optional subtle bottom border for separation */
  border-bottom: 1px solid var(--border-subtle, #e5e7eb);
}

/* Respect device safe areas on the top header area so measurements include the inset */
.chrome-header {
  padding-top: constant(safe-area-inset-top); /* iOS 11.2 legacy */
  padding-top: env(safe-area-inset-top);
  padding-left: env(safe-area-inset-left);
  padding-right: env(safe-area-inset-right);
}

/* Toolbars: fixed/sticky container handles pinning; ensure no transforms apply */
.app-header,
.top-toolbar,
.options-toolbar {
  transform: none !important;
  will-change: auto;
  contain: layout paint;
}

/* Top offset is applied in WorkspaceViewport using --h-stack;
   avoid duplicating here to prevent double spacing. */
.workspace-root {
  /* The viewport height varies on mobile browsers; prefer dynamic dvh with vh fallback */
  height: 100vh;
  height: 100dvh;
  /* Offset content by the fixed control strip height */
  padding-top: var(--control-strip-height, 200px); /* Increased default fallback */
  overflow-y: auto;
}

/* Viewport owns scrolling; inner scale layer owns zoom */
#workspace-viewport {
  overflow: auto;
  /* Center the scaled paper horizontally */
  display: flex;
  justify-content: center;
}

/* Scaled-size spacer and transform layer */
.workspace-scaler {
  position: relative;
  /* Spacer sized to scaled virtual size (page + padding) so scrollbars reflect visual size */
  width: calc(var(--virtual-width, 1500px) * var(--workspace-zoom, 1));
  height: calc(var(--virtual-height, 2550px) * var(--workspace-zoom, 1));
}

#workspace-scale-layer {
  position: absolute;
  inset: 0;
  transform: scale(var(--workspace-zoom, 1));
  transform-origin: top left;
  will-change: transform;
}

.page-wrapper {
  width: var(--page-width);   /* basePageSize.w */
  height: var(--page-height);  /* basePageSize.h */
  position: absolute;
  /* Center page within virtual space using calc to account for padding */
  left: calc((var(--virtual-width) - var(--page-width)) / 2);
  top: calc((var(--virtual-height) - var(--page-height)) / 2);
  box-sizing: content-box; /* ensure padding doesn't shrink the paper */
}

/* Ensure indicator and strip pin to top and never transform */
.page-indicator,
.control-strip {
  position: sticky; /* control-strip is fixed via its rule; this is safe */
  top: 0;
  z-index: var(--z-control-strip, 1000);
  transform: none !important;
}

/* Ensure Excalidraw (or any engine) fills the page wrapper */
#excal-host,
#excal-host > .excalidraw,
#excal-host > .excalidraw .excalidraw__container,
.excalidraw-container {
  position: absolute;
  inset: 0;
  width: 100% !important;
  height: 100% !important;
  max-width: none !important;
  max-height: none !important;
}

/* Phase 2: allow the scale layer to visually scale the entire page;
   do not apply counter-transforms on the canvas host so its logical
   size remains 1200x2200 CSS pixels regardless of zoom. */

/* Neutralize mobile/layout caps if applied by Excalidraw */
.excalidraw.excalidraw--mobile,
.excalidraw .layer-ui__wrapper,
.excalidraw .excalidraw__canvas {
  max-width: none !important;
  max-height: none !important;
}

/* Ensure mobile variant fills fully as well */
.excalidraw.excalidraw--mobile {
  width: 100% !important;
  height: 100% !important;
}

/* Avoid forcing transform/zoom on the engine canvas; let the engine manage its own internals */

/* Debug layout outlines (temporary aid) */
.debug-layout .workspace-viewport {
  outline: 1px solid #3b82f6; /* blue */
}
.debug-layout .workspace-scaler {
  outline: 1px solid #22c55e; /* green */
}
.debug-layout .workspace-canvas-mount {
  outline: 1px solid #fb923c; /* orange */
}

/* Workspace root composite vars: CSS owns computed heights */
[data-workspace-root] {
  /* default gaps and indicator height */
  --gap-header-top: 8px;
  --gap-top-opts: 8px;
  --gap-indicator-above: 8px;
  --gap-indicator-below: 0; /* no gap below PageIndicator */
  --h-indicator: 40px;
  /* computed stacks */
  --h-chrome: calc(var(--h-header) + var(--h-top) + var(--h-opts));
  --h-stack: calc(
    var(--h-chrome)
    + var(--gap-header-top)
    + var(--gap-top-opts)
    + var(--gap-indicator-above)
    + var(--h-indicator)
    + var(--gap-indicator-below)
  );
  /* Alias: control strip total height used by scroll container padding */
  --control-strip-height: var(--h-stack);
}

/* Workspace scaler sits directly below control strip with no extra gap */
.workspace-scaler {
  margin-top: 0;
}
