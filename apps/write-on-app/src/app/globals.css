@import "tailwindcss";

:root {
  --background: #ffffff;
  --foreground: #171717;
  /* Z-index discipline tokens */
  --z-control-strip: 1000;
  --z-workspace: 0;
  
  /* Page size and padding constants */
  --page-width: 1200px;
  --page-height: 2200px;
  --page-padding-x: 40px;
  --page-padding-top: 40px;
  --page-padding-bottom: 40px;
  
  /* Virtual size calculation: page + padding */
  --virtual-width: calc(var(--page-width) + 2 * var(--page-padding-x));
  --virtual-height: calc(var(--page-height) + var(--page-padding-top) + var(--page-padding-bottom));

  /* Control strip spacer variables */
  --top-toolbar-height: 64px;
  --options-toolbar-height: 56px;
  --page-indicator-height: 40px;
  --gap-header-top: 8px;
  --gap-top-opts: 4px;
  --gap-indicator-above: 8px;
  --gap-indicator-below: 12px;
  --control-strip-separator: 1px;
  --viewport-top-gap: 12px;
  /* Fallback reserved height until runtime measurement updates */
  --control-strip-height: 249px;
}

@theme inline {
  --color-background: var(--background);
  --color-foreground: var(--foreground);
  --font-sans: var(--font-geist-sans);
  --font-mono: var(--font-geist-mono);
}

@media (prefers-color-scheme: dark) {
  :root {
    --background: #0a0a0a;
    --foreground: #ededed;
  }
}

/* Reset default margins and ensure full-height root for layout stability */
html, body {
  margin: 0;
  padding: 0;
  height: 100%;
  overflow: hidden;
}

body {
  background: var(--background);
  color: var(--foreground);
  font-family: Arial, Helvetica, sans-serif;
}

/* Next.js root height safety */
#__next, body > div:first-child {
  min-height: 100%;
}

/* Prevent scroll chaining during zoom handling */
.main-scroll {
  overscroll-behavior: none;
}

/* Input guardrails */
.workspace-root,
.workspace-canvas-mount,
canvas {
  user-select: none;
  -webkit-user-select: none;
  -moz-user-select: none;
}

.workspace-root,
.workspace-canvas-mount,
canvas {
  touch-action: pan-y;
}

.workspace-canvas-mount {
  position: relative;
  display: block;
  flex: 0 0 auto;
  width: var(--page-width, 1200px);
  height: var(--page-height, 2200px);
}


/* Workspace app root wraps chrome + scroll container */
.workspace-app-root {
  position: relative;
  width: 100%;
  height: 100%;
  min-height: 100%;
  display: flex;
  flex-direction: column;
}

/* Phase-2: pin control strip and offset content */
.control-strip {
  /* Guardrail: freeze positioning to prevent regressions */
  position: fixed !important;  /* never overridden */
  top: 0 !important;
  left: 0 !important;
  right: 0 !important;
  z-index: var(--z-control-strip, 1000) !important;
  width: 100%;
  display: flex;
  flex-direction: column;
  /* Provide a solid surface behind chrome to prevent content bleed-through */
  background-color: var(--chrome-bg, #ffffff);
  overflow: visible;
}

/* Respect device safe areas on the top header area so measurements include the inset */
.chrome-header {
  padding-top: constant(safe-area-inset-top); /* iOS 11.2 legacy */
  padding-top: env(safe-area-inset-top);
  padding-left: env(safe-area-inset-left);
  padding-right: env(safe-area-inset-right);
}

/* Toolbars: fixed/sticky container handles pinning; ensure no transforms apply */
.app-header,
.top-toolbar,
.options-toolbar {
  transform: none !important;
  will-change: auto;
  contain: none;
}

/* Control-strip offset is handled via --control-strip-height at runtime. */
.workspace-root {
  position: relative;
  width: 100%;
  height: 100vh;
  height: 100dvh;
  min-height: 0;
  display: block;
  padding-top: calc(var(--control-strip-height, 0px) + var(--viewport-top-gap, 12px));
  padding-bottom: var(--viewport-bottom-gap, max(10vh, 80px));
  overflow-y: auto;
  overflow-x: hidden;
  scrollbar-gutter: stable both-edges;
  box-sizing: border-box;
  background-color: var(--workspace-bg, #ffffff);
  transform: none !important;
  overscroll-behavior: contain;
}



/* WorkspaceRoot owns scrolling; viewport stays transform-free and observes size */
.workspace-viewport,
#workspace-viewport {
  position: relative;
  width: 100%;
  display: flex;
  justify-content: center;
  align-items: flex-start;
  padding: 0 0 var(--viewport-bottom-gap, max(10vh, 80px));
  margin: 0 !important;
  box-sizing: border-box;
  gap: 0;
  overflow: visible;
  transform: none !important;
  min-height: calc(100vh - var(--control-strip-height, 0px));
  min-height: calc(100dvh - var(--control-strip-height, 0px));
}.workspace-viewport * {
  box-sizing: border-box;
  max-width: 100%;
}



/* Scaled-size spacer and transform layer */

.workspace-scaler {
  position: relative;
  width: var(--page-width, 1200px);
  height: var(--page-height, 2200px);
  transform: scale(var(--workspace-zoom, 1));
  transform-origin: top center;
  will-change: transform;
}

/* Removed #workspace-scale-layer; scaling handled by engine/viewport */

.canvas-page {
  position: relative;
  width: var(--page-width, 1200px);
  height: var(--page-height, 2200px);
  box-sizing: border-box;
  overflow: visible;
}

.canvas-page .page-surface {
  position: absolute;
  inset: 0;
  background: #ffffff;
  border-radius: 12px;
  box-shadow: 0 18px 48px rgba(15, 23, 42, 0.12);
  pointer-events: none;
  z-index: 0;
}


.page-host,
#excal-host {
  display: contents;
}

/* Ensure indicator and strip pin to top and never transform */
.page-indicator,
.control-strip {
  position: sticky; /* control-strip is fixed via its rule; this is safe */
  top: 0;
  z-index: var(--z-control-strip, 1000);
  transform: none !important;
}
/* Ensure Excalidraw (or any engine) fills the page wrapper */
.excalidraw-container {
  position: absolute;
  inset: 0;
  width: 100% !important;
  height: 100% !important;
  max-width: none !important;
  max-height: none !important;
}

/* Do not set per-canvas CSS sizes; wrapper controls size */

/* Some Excalidraw builds apply inline sizes; override to keep CSS size stable */
.excalidraw .excalidraw__canvas,
.excalidraw .excalidraw__canvas canvas {
  max-width: none !important;
  max-height: none !important;
}

/* Phase 2: allow the scale layer to visually scale the entire page;
   do not apply counter-transforms on the canvas host so its logical
   size remains 1200x2200 CSS pixels regardless of zoom. */

/* Neutralize mobile/layout caps if applied by Excalidraw */
.excalidraw.excalidraw--mobile,
.excalidraw .layer-ui__wrapper,
.excalidraw .excalidraw__canvas {
  max-width: none !important;
  max-height: none !important;
}

/* Ensure mobile variant fills fully as well */
.excalidraw.excalidraw--mobile {
  width: 100% !important;
  height: 100% !important;
}

/* Avoid forcing transform/zoom on the engine canvas; let the engine manage its own internals */

/* Debug layout outlines (temporary aid) */
.debug-layout .workspace-viewport {
  outline: 1px solid #3b82f6; /* blue */
}
.debug-layout .workspace-scaler {
  outline: 1px solid #2563eb; /* indigo */
}
.debug-layout .workspace-canvas-mount {
  outline: 1px solid #fb923c; /* orange */
}

/* Workspace root composite vars: CSS owns computed heights */

/* Fix pointer events conflicts between top/left menu and Excalidraw canvas */
.FixedSideContainer_side_top {
  pointer-events: none;
  position: sticky;
  top: var(--control-strip-height, 249px);
  z-index: 50;
}

/* Re-enable pointer events for the inner controls */
.FixedSideContainer_side_top .App-menu_top,
.FixedSideContainer_side_top .App-menu_top * {
  pointer-events: auto;
}

/* Constrain left menu */
.App-menu_top__left {
  max-height: calc(100vh - var(--control-strip-height, 249px));
  overflow: auto;
  align-self: flex-start;
  background: transparent;
}

/* Ensure workspace layers have proper z-index */
.workspace-root {
  position: relative;
  z-index: 0;
}

.workspace-canvas-mount {
  position: relative;
  z-index: 0;
}

/* Excalidraw mount sizing - fills page */
.excalidraw-island-container {
  position: absolute;
  inset: 0;
  width: 100%;
  height: 100%;
}

/* Hide any remaining Excalidraw UI elements for pure drawing surface */
.excalidraw .App-toolbar,
.excalidraw .App-bottom-bar,
.excalidraw .App-menu,
.excalidraw .App-menu_bottom,
.excalidraw .App-menu_top,
.excalidraw .layer-ui__wrapper,
.excalidraw .FixedSideContainer,
.excalidraw .App-main__menu,
.excalidraw .welcome-screen,
.excalidraw .help-dialog,
.excalidraw .Stack,
.excalidraw .Stack_vertical,
.excalidraw .Stack_horizontal,
.excalidraw div[class*="Stack"],
.excalidraw .Island,
.excalidraw .ButtonSelect,
.excalidraw .ToolButton,
.excalidraw .Shape,
.excalidraw .panelColumn {
  display: none !important;
}

/* More aggressive hiding for any UI containers */
.excalidraw > div:not(.excalidraw__container):not(.canvas) {
  display: none !important;
}

/* Ensure only canvas and container are visible */
.excalidraw .excalidraw__container > *:not(.canvas):not(canvas) {
  display: none !important;
}

/* CRITICAL: Eliminate the giant Stack_vertical overlay and all Excalidraw UI */
.Stack.Stack_vertical,
div[class="Stack Stack_vertical"],
div[class*="Stack_vertical"],
div[class*="Stack "],
.excalidraw-island-container .Stack,
.excalidraw-island-container .Stack_vertical,
.excalidraw-island-container div[class*="Stack"],
.excalidraw .Stack,
.excalidraw .Stack_vertical,
.excalidraw div[class*="Stack"],
/* Target any UI overlay elements */
.excalidraw > div[class*="Stack"],
.excalidraw-wrapper > div[class*="Stack"],
excalidraw-island div[class*="Stack"],
/* Nuclear option: any div with Stack in class name */
div[class*="Stack"] {
  display: none !important;
  visibility: hidden !important;
  opacity: 0 !important;
  pointer-events: none !important;
  position: absolute !important;
  top: -9999px !important;
  left: -9999px !important;
  z-index: -1 !important;
}

/* NUCLEAR OPTION: Target the Web Component directly */
excalidraw-island::part(ui-overlay),
excalidraw-island * [class*="overlay"],
excalidraw-island * [class*="ui-"],
excalidraw-island * [class*="toolbar"],
excalidraw-island * [class*="menu"],
excalidraw-island * [class*="panel"],
excalidraw-island * [class*="footer"],
excalidraw-island * [class*="header"] {
  display: none !important;
  visibility: hidden !important;
  opacity: 0 !important;
  pointer-events: none !important;
}

/* Force the shadow DOM to hide UI elements */
excalidraw-island {
  --excalidraw-ui-visibility: hidden !important;
}

/* Ensure only canvas remains visible and fills container */
.excalidraw .excalidraw-canvas,
.excalidraw canvas {
  width: 100% !important;
  height: 100% !important;
  position: relative !important;
  z-index: 1 !important;
}

/* Stack both canvases perfectly within a fixed page-size wrapper */
.excalidraw .excalidraw__canvas-wrapper {
  position: relative !important;
  width: var(--page-width, 1200px) !important;
  height: var(--page-height, 2200px) !important;
}
.excalidraw .excalidraw__canvas-wrapper > canvas.excalidraw__canvas {
  position: absolute !important;
  inset: 0 !important;
  width: 100% !important;
  height: 100% !important;
  display: block !important;
}

/* Mount the web component to fill the page wrapper */
.canvas-page > excalidraw-island {
  position: absolute;
  inset: 0;
}

























