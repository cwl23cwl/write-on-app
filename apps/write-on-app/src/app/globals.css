@import "tailwindcss";
@import "@tldraw/tldraw/tldraw.css";

:root {
  --background: #ffffff;
  --foreground: #171717;
  /* Z-index discipline tokens */
  --z-control-strip: 1000;
  --z-workspace: 0;
  
  /* Page size and padding constants */
  --page-width: 1200px;
  --page-height: 2200px;
  --page-padding-x: 40px;
  --page-padding-top: 40px;
  --page-padding-bottom: 40px;
  
  /* Virtual size calculation: page + padding */
  --virtual-width: calc(var(--page-width) + 2 * var(--page-padding-x));
  --virtual-height: calc(var(--page-height) + var(--page-padding-top) + var(--page-padding-bottom));

  /* Control strip spacer variables */
  --top-toolbar-height: 64px;
  --options-toolbar-height: 64px;
  --page-indicator-height: 40px;
  --gap-header-top: 8px;
  --gap-top-opts: 4px;
  --gap-indicator-above: 8px;
  --gap-indicator-below: 12px;
  --control-strip-separator: 1px;
  /* Fallback reserved height until runtime measurement updates */
  --control-strip-height: 273px;
  --workspace-scroll-gap: 12px;
}

@theme inline {
  --color-background: var(--background);
  --color-foreground: var(--foreground);
  --font-sans: var(--font-geist-sans);
  --font-mono: var(--font-geist-mono);
}

@media (prefers-color-scheme: dark) {
  :root {
    --background: #0a0a0a;
    --foreground: #ededed;
  }
}

/* Reset default margins and ensure full-height root for layout stability */
html, body {
  margin: 0;
  padding: 0;
  height: 100%;
  overflow: hidden;
}

body {
  background: var(--background);
  color: var(--foreground);
  font-family: Arial, Helvetica, sans-serif;
}

/* Next.js root height safety */
#__next, body > div:first-child {
  min-height: 100%;
}

/* Prevent scroll chaining during zoom handling */
.main-scroll {
  overscroll-behavior: none;
}

/* Input guardrails */
.workspace-root,
.workspace-canvas-mount,
canvas {
  user-select: none;
  -webkit-user-select: none;
  -moz-user-select: none;
}

.workspace-root {
  touch-action: pan-y;
}

.workspace-canvas-mount,
.workspace-canvas-mount canvas,
[data-engine="tldraw"],
[data-engine="tldraw"] .tl-canvas {
  touch-action: none;
}

.workspace-canvas-mount {
  position: relative;
  display: block;
  flex: 0 0 auto;
  width: var(--page-width, 1200px);
  height: var(--page-height, 2200px);
}


/* Workspace app root wraps chrome + scroll container */
.workspace-app-root {
  position: relative;
  width: 100%;
  height: 100%;
  min-height: 100%;
  display: flex;
  flex-direction: column;
}

/* Phase-2: pin control strip and offset content */
.control-strip {
  /* Guardrail: freeze positioning to prevent regressions */
  position: fixed !important;  /* never overridden */
  top: 0 !important;
  left: 0 !important;
  right: 0 !important;
  z-index: var(--z-control-strip, 1000) !important;
  width: 100%;
  display: flex;
  flex-direction: column;
  /* Provide a solid surface behind chrome to prevent content bleed-through */
  background-color: var(--chrome-bg, #ffffff);
  overflow: visible;
}

/* Respect device safe areas on the top header area so measurements include the inset */
.chrome-header {
  padding-top: constant(safe-area-inset-top); /* iOS 11.2 legacy */
  padding-top: env(safe-area-inset-top);
  padding-left: env(safe-area-inset-left);
  padding-right: env(safe-area-inset-right);
}

/* Toolbars: fixed/sticky container handles pinning; ensure no transforms apply */
.app-header,
.top-toolbar,
.options-toolbar {
  transform: none !important;
  will-change: auto;
  contain: none;
}

/* Control-strip offset is handled via --control-strip-height at runtime. */
.workspace-root {
  position: relative;
  width: 100%;
  margin-top: var(--control-strip-height, 273px);
  height: max(0px, calc(100vh - var(--control-strip-height, 273px)));
  height: max(0px, calc(100dvh - var(--control-strip-height, 273px)));
  min-height: 0;
  display: block;
  padding-top: var(--workspace-scroll-gap, 12px);
  padding-bottom: 160px;
  overflow-y: auto;
  overflow-x: hidden;
  scrollbar-gutter: stable both-edges;
  box-sizing: border-box;
  background-color: var(--workspace-bg, #ffffff);
  transform: none !important;
  overscroll-behavior: contain;
  scrollbar-width: none;
  scrollbar-color: transparent transparent;
}

/* Scrollbar auto-fade styling */
.workspace-root::-webkit-scrollbar {
  width: 10px;
  height: 10px;
  background-color: transparent;
  opacity: 0;
  transition: opacity 0.35s ease-in-out;
}

.workspace-root::-webkit-scrollbar-thumb {
  background-color: rgba(15, 23, 42, 0.35);
  border-radius: 8px;
  min-height: 32px;
  opacity: 0;
  transition: opacity 0.35s ease-in-out, background-color 0.25s ease-out;
}

.workspace-root::-webkit-scrollbar-thumb:hover {
  background-color: rgba(15, 23, 42, 0.55);
}

.workspace-root.show-scrollbars {
  scrollbar-width: thin;
  scrollbar-color: rgba(15, 23, 42, 0.35) transparent;
}

.workspace-root.show-scrollbars::-webkit-scrollbar,
.workspace-root.show-scrollbars::-webkit-scrollbar-thumb {
  opacity: 1;
}

.workspace-root.show-scrollbars::-webkit-scrollbar-thumb:hover {
  background-color: rgba(15, 23, 42, 0.55);
}

.workspace-root:hover {
  scrollbar-width: thin;
}

.workspace-root:hover::-webkit-scrollbar,
.workspace-root:hover::-webkit-scrollbar-thumb {
  opacity: 1;
}




/* WorkspaceRoot owns scrolling; viewport stays transform-free and observes size */
.workspace-viewport,
#workspace-viewport {
  position: relative;
  width: 100%;
  min-height: var(--page-height, 2200px);
  display: flex;
  justify-content: center;
  align-items: flex-start;
  padding: 0;
  margin: 0 !important;
  box-sizing: border-box;
  gap: 0;
  overflow-x: hidden;
  overflow-y: visible;
  background: transparent;
  transform: none !important;
}
.workspace-viewport * {
  box-sizing: border-box;
  max-width: 100%;
}



/* Scaled-size spacer and transform layer */

.workspace-scaler {
  position: relative;
  display: block;
  width: var(--page-width, 1200px);
  height: var(--page-height, 2200px);
  transform: none !important;
  transform-origin: top left !important;
  zoom: 1 !important;
  will-change: auto;
  contain: layout paint;
  pointer-events: auto;
  margin: 0;
}

/* Removed #workspace-scale-layer; scaling handled by engine/viewport */

.canvas-page {
  position: relative;
  width: var(--page-width, 1200px);
  height: var(--page-height, 2200px);
  box-sizing: border-box;
  overflow: visible;
  background: #ffffff;
  border-radius: 8px;
  box-shadow: 0 4px 16px rgba(0, 0, 0, 0.15);
}

.canvas-page .page-surface {
  position: absolute;
  inset: 0;
  pointer-events: none;
  border-radius: inherit;
  background: transparent;
  z-index: 0;
}


.page-host {
  display: contents;
}

/* Ensure indicator and strip pin to top and never transform */
.page-indicator,
.control-strip {
  position: sticky; /* control-strip is fixed via its rule; this is safe */
  top: 0;
  z-index: var(--z-control-strip, 1000);
  transform: none !important;
}
/* TLDraw engine host should inherit page bounds and remain below chrome */
[data-engine="tldraw"] {
  position: absolute;
  inset: 0;
  width: 100%;
  height: 100%;
  z-index: var(--z-workspace, 0);
}

[data-engine="tldraw"] .tl-container {
  width: 100%;
  height: 100%;
  background-color: transparent;
}

[data-engine="tldraw"] .tl-background,
[data-engine="tldraw"] .tl-canvas {
  border-radius: inherit;
}

[data-engine="tldraw"] .tl-background {
  background-color: transparent !important;
}

[data-engine="tldraw"] .tl-canvas {
  inset: 0;
}

/* Avoid forcing transform/zoom on the engine canvas; let the engine manage its own internals */

/* Debug layout outlines (temporary aid) */
.debug-layout .workspace-viewport {
  outline: 1px solid #3b82f6; /* blue */
}
.debug-layout .workspace-scaler {
  outline: 1px solid #2563eb; /* indigo */
}
.debug-layout .workspace-canvas-mount {
  outline: 1px solid #fb923c; /* orange */
}

/* Workspace root composite vars: CSS owns computed heights */

/* Fix pointer events conflicts between chrome and canvas surface */
.FixedSideContainer_side_top {
  pointer-events: none;
  position: sticky;
  top: var(--control-strip-height, 273px);
  z-index: 50;
}

/* Re-enable pointer events for the inner controls */
.FixedSideContainer_side_top .App-menu_top,
.FixedSideContainer_side_top .App-menu_top * {
  pointer-events: auto;
}

/* Constrain left menu */
.App-menu_top__left {
  max-height: calc(100vh - var(--control-strip-height, 273px));
  overflow: auto;
  align-self: flex-start;
  background: transparent;
}

/* Ensure workspace layers have proper z-index */
.workspace-root {
  position: relative;
  z-index: 0;
}

.workspace-canvas-mount {
  position: relative;
  z-index: 0;
}


































